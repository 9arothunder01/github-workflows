name: Deploy Chatbot and Docs

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  FIREBASE_PROJECT: your-firebase-project-id
  DOMAIN: yourdomain.com

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v3

      - name: 🧪 Run Tests
        run: |
          npm install
          npm run test
      - name: 🔐 Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: 🔧 Install Firebase CLI
        run: npm install -g firebase-tools

      - name: 🔐 Firebase Login
        run: firebase auth:login:ci --token "${{ secrets.FIREBASE_TOKEN }}"

      - name: 🚀 Deploy to Firebase Hosting
        run: firebase deploy --only hosting --project $FIREBASE_PROJECT

      - name: 🧾 Update DNS Records via Cloudflare
        if: ${{ success() }}
        run: |
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/dns_records" \
          -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
          -H "Content-Type: application/json" \
          --data @.github/scripts/cloudflare_dns.json
      - name: 🧼 SSL Renewal Check
        run: |
          bash .github/scripts/ssl_check.sh
      - name: 🔔 Notify Slack
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_TITLE: "Deployment Report"
          SLACK_MESSAGE: "Deployment to Firebase complete. Status: ${{ job.status }}"

      - name: 🔙 Rollback on Failure
        if: failure()
        run: |
          echo "Rolling back..."
          firebase hosting:rollback --project $FIREBASE_PROJECT
